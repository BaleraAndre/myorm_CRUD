"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const myorm_core_1 = require("myorm_core");
class PGFluentField extends myorm_core_1.AbstractFluentField {
    constructor(pgSet, field, isOr = false) {
        super();
        this._pgSet = pgSet;
        this._field = field;
        this._isOr = isOr;
    }
    IsGreaterThan(value) {
        if (this._isOr) {
            this._pgSet.Or({
                Field: this._field,
                Kind: myorm_core_1.Operation.GREATHER,
                Value: value
            });
            return this._pgSet;
        }
        this._pgSet.Where({
            Field: this._field,
            Kind: myorm_core_1.Operation.GREATHER,
            Value: value
        });
        return this._pgSet;
    }
    IsEqualTo(value) {
        if (this._isOr) {
            this._pgSet.Or({
                Field: this._field,
                Value: value
            });
            return this._pgSet;
        }
        this._pgSet.Where({
            Field: this._field,
            Value: value
        });
        return this._pgSet;
    }
    IsNotEqualTo(value) {
        if (this._isOr) {
            this._pgSet.Or({
                Field: this._field,
                Kind: myorm_core_1.Operation.NOTEQUALS,
                Value: value
            });
            return this._pgSet;
        }
        this._pgSet.Where({
            Field: this._field,
            Kind: myorm_core_1.Operation.NOTEQUALS,
            Value: value
        });
        return this._pgSet;
    }
    IsSmallerThan(value) {
        if (this._isOr) {
            this._pgSet.Or({
                Field: this._field,
                Kind: myorm_core_1.Operation.SMALLER,
                Value: value
            });
            return this._pgSet;
        }
        this._pgSet.Where({
            Field: this._field,
            Kind: myorm_core_1.Operation.SMALLER,
            Value: value
        });
        return this._pgSet;
    }
    IsInsideIn(value) {
        for (let i = 0; i < value.length; i++) {
            if (i == 0 && !this._isOr) {
                this._pgSet.Where({
                    Field: this._field,
                    Value: value[i]
                });
            }
            else {
                this._pgSet.Or({
                    Field: this._field,
                    Value: value[i]
                });
            }
        }
        return this._pgSet;
    }
    Constains(value) {
        if (this._isOr) {
            this._pgSet.Or({
                Field: this._field,
                Kind: myorm_core_1.Operation.CONSTAINS,
                Value: value
            });
            return this._pgSet;
        }
        this._pgSet.Where({
            Field: this._field,
            Kind: myorm_core_1.Operation.CONSTAINS,
            Value: value
        });
        return this._pgSet;
    }
    StartsWith(value) {
        if (this._isOr) {
            this._pgSet.Or({
                Field: this._field,
                Kind: myorm_core_1.Operation.STARTWITH,
                Value: value
            });
            return this._pgSet;
        }
        this._pgSet.Where({
            Field: this._field,
            Kind: myorm_core_1.Operation.STARTWITH,
            Value: value
        });
        return this._pgSet;
    }
    EndsWith(value) {
        if (this._isOr) {
            this._pgSet.Or({
                Field: this._field,
                Kind: myorm_core_1.Operation.ENDWITH,
                Value: value
            });
            return this._pgSet;
        }
        this._pgSet.Where({
            Field: this._field,
            Kind: myorm_core_1.Operation.ENDWITH,
            Value: value
        });
        return this._pgSet;
    }
    IsNull() {
        if (!this._isOr) {
            this._pgSet.Where({
                Field: this._field,
                Value: undefined
            });
        }
        else {
            this._pgSet.Or({
                Field: this._field,
                Value: undefined
            });
        }
        return this._pgSet;
    }
}
exports.default = PGFluentField;
//# sourceMappingURL=PGFluentField.js.map