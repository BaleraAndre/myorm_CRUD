import PGDBSet from "./PGDBSet";
export default class PGSetHelper {
    private static _sqlKey;
    private static _joinKey;
    private static _onKey;
    private static _whereKey;
    static InjectORMData<T extends Object>(set: PGDBSet<T>, key: string, value: string): PGDBSet<T>;
    static ExtractORMData<T extends Object>(set: PGDBSet<T>, key: string): string;
    static InjectSQL<T extends Object>(set: PGDBSet<T>, sql: string): PGDBSet<T>;
    static InjectWhere<T extends Object>(set: PGDBSet<T>, where: string): PGDBSet<T>;
    static InjectJoin<T extends Object>(set: PGDBSet<T>, join: string): PGDBSet<T>;
    static InjectOn<T extends Object>(set: PGDBSet<T>, on: string): PGDBSet<T>;
    static ExtractJoinData<T extends Object>(set: PGDBSet<T>): string;
    static ExtractOnData<T extends Object>(set: PGDBSet<T>): string;
    static ExtractWhereData<T extends Object>(set: PGDBSet<T>): string;
    static ExtractSQLData<T extends Object>(set: PGDBSet<T>): string;
    static CleanORMData<T extends Object>(set: PGDBSet<T>): void;
}
//# sourceMappingURL=PGSetHelper.d.ts.map