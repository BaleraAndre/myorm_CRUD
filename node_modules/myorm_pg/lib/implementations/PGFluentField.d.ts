import { AbstractFluentField } from "myorm_core";
import PGDBSet from "./PGDBSet";
export default class PGFluentField<T extends object, K extends keyof T, P extends PGDBSet<T>> extends AbstractFluentField<T, K, P> {
    private _pgSet;
    private _field;
    private _isOr;
    constructor(pgSet: P, field: keyof T, isOr?: boolean);
    IsGreaterThan(value: T[K]): P;
    IsEqualTo(value: T[K]): P;
    IsNotEqualTo(value: T[K]): P;
    IsSmallerThan(value: T[K]): P;
    IsInsideIn(value: T[K][]): P;
    Constains(value: T[K]): P;
    StartsWith(value: T[K]): P;
    EndsWith(value: T[K]): P;
    IsNull(): P;
}
//# sourceMappingURL=PGFluentField.d.ts.map