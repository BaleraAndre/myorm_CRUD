import 'reflect-metadata';
import { DBTypes } from '../enums/DBTypes';
import { RelationType } from '../enums/RelationType';
export default class SchemasDecorators {
    private static _tableAttribute;
    private static _columnAttribute;
    private static _dataTypeAttribute;
    private static _primaryKeyAttribute;
    private static _relationAttribute;
    private static _notNullAttribute;
    static Table(name?: string): (target: Object) => void;
    static GetTableAttribute(target: Object): string | undefined;
    static Column(name?: string): (target: Object, propertyName: string) => void;
    static GetColumnAttribute(cTor: Function, propertyName: string): string | undefined;
    static NotNull(): (target: Object, propertyName: string) => void;
    static AllowNullValue(cTor: Function, propertyName: string): boolean;
    static OneToOne<T>(lazyBuilder: () => {
        new (...args: any[]): T;
    }, property?: keyof T & string): (target: Object, propertyName: string) => void;
    static OneToMany<T>(lazyBuilder: () => {
        new (...args: any[]): T;
    }, property?: keyof T & string): (target: Object, propertyName: string) => void;
    static ManyToOne<T>(lazyBuilder: () => {
        new (...args: any[]): T;
    }, property?: keyof T & string): (target: Object, propertyName: string) => void;
    static ManyToMany<T>(lazyBuilder: () => {
        new (...args: any[]): T;
    }, property?: keyof T & string): (target: Object, propertyName: string) => void;
    private static Relation;
    static GetRelationAttribute(cTor: Function, propertyName: string): {
        TypeBuilder: () => {
            new (...args: any[]): unknown;
        };
        Relation: RelationType;
        Field?: string;
    } | undefined;
    static PrimaryKey(): (target: Object, propertyName: string) => void;
    static IsPrimaryKey(cTor: Function, propertyName: string): boolean;
    static ExtractPrimaryKey(cTor: {
        new (...args: any[]): unknown;
    }): string | undefined;
    static DataType(type: DBTypes): (target: Object, propertyName: string) => void;
    static GetDataTypeAttribute(cTor: Function, propertyName: string): DBTypes | undefined;
}
//# sourceMappingURL=SchemasDecorators.d.ts.map