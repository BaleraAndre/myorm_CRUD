"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManyToOne = exports.ManyToMany = exports.OneToOne = exports.OneToMany = exports.PrimaryKey = exports.DataType = exports.Table = exports.Column = exports.PGDBSet = exports.PGDBManager = exports.PGDBContext = exports.PGDBConnection = exports.DBTypes = exports.TypeNotSuportedException = exports.TypeNotMappedException = exports.QueryFailException = exports.NotImpletedException = exports.InvalidOperationException = exports.ConstraintFailException = exports.ConnectionFailException = void 0;
const DBTypes_1 = require("./core/enums/DBTypes");
Object.defineProperty(exports, "DBTypes", { enumerable: true, get: function () { return DBTypes_1.DBTypes; } });
const SchemasDecorators_1 = __importDefault(require("./core/decorators/SchemasDecorators"));
const PGDBConnection_1 = __importDefault(require("./implementations/PGDBConnection"));
exports.PGDBConnection = PGDBConnection_1.default;
const PGDBContext_1 = __importDefault(require("./implementations/PGDBContext"));
exports.PGDBContext = PGDBContext_1.default;
const PGDBManager_1 = __importDefault(require("./implementations/PGDBManager"));
exports.PGDBManager = PGDBManager_1.default;
const PGDBSet_1 = __importDefault(require("./implementations/PGDBSet"));
exports.PGDBSet = PGDBSet_1.default;
const QueryFailException_1 = __importDefault(require("./core/exceptions/QueryFailException"));
exports.QueryFailException = QueryFailException_1.default;
const NotImplementedException_1 = __importDefault(require("./core/exceptions/NotImplementedException"));
exports.NotImpletedException = NotImplementedException_1.default;
const TypeNotMappedException_1 = __importDefault(require("./core/exceptions/TypeNotMappedException"));
exports.TypeNotMappedException = TypeNotMappedException_1.default;
const ConnectionFailException_1 = __importDefault(require("./core/exceptions/ConnectionFailException"));
exports.ConnectionFailException = ConnectionFailException_1.default;
const ConstraintFailException_1 = __importDefault(require("./core/exceptions/ConstraintFailException"));
exports.ConstraintFailException = ConstraintFailException_1.default;
const TypeNotSuportedException_1 = __importDefault(require("./core/exceptions/TypeNotSuportedException"));
exports.TypeNotSuportedException = TypeNotSuportedException_1.default;
const InvalidOperationException_1 = __importDefault(require("./core/exceptions/InvalidOperationException"));
exports.InvalidOperationException = InvalidOperationException_1.default;
function Column(name) {
    return SchemasDecorators_1.default.Column(name);
}
exports.Column = Column;
function Table(name) {
    return SchemasDecorators_1.default.Table(name);
}
exports.Table = Table;
function DataType(dbType) {
    return SchemasDecorators_1.default.DataType(dbType);
}
exports.DataType = DataType;
function PrimaryKey() {
    return SchemasDecorators_1.default.PrimaryKey();
}
exports.PrimaryKey = PrimaryKey;
function OneToMany(typeBuilder, property) {
    return SchemasDecorators_1.default.OneToMany(typeBuilder, property);
}
exports.OneToMany = OneToMany;
function OneToOne(typeBuilder, property) {
    return SchemasDecorators_1.default.OneToOne(typeBuilder, property);
}
exports.OneToOne = OneToOne;
function ManyToMany(typeBuilder, property) {
    return SchemasDecorators_1.default.ManyToMany(typeBuilder, property);
}
exports.ManyToMany = ManyToMany;
function ManyToOne(typeBuilder, property) {
    return SchemasDecorators_1.default.ManyToOne(typeBuilder, property);
}
exports.ManyToOne = ManyToOne;
//# sourceMappingURL=Index.js.map